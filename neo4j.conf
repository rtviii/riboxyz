# Memory Settings - More conservative for small data
server.memory.pagecache.size=2GB                    # Reduced - small data doesn't need large cache
dbms.memory.heap.initial_size=2GB                   # Reduced - individual operations are small
dbms.memory.heap.max_size=2GB                       # Matched with initial
dbms.memory.off_heap.max_size=1GB                   # Reduced

# Transaction Settings - Key for your use case
dbms.memory.transaction.total.max=1GB               # Reduced - prevent transaction buildup
dbms.transaction.timeout=120s                       # Shorter timeout - fail fast if stuck
dbms.transaction.concurrent.maximum=8               # Reduced concurrent transactions
dbms.transaction.state.memory.allocation=ON_HEAP    # Keep transactions on heap for better management

# Connection Settings (unchanged)
server.default_listen_address=0.0.0.0
server.bolt.enabled=true
server.discovery.advertised_address=neo:5000
server.cluster.advertised_address=neo:6000
server.cluster.raft.advertised_address=neo:7000
server.routing.advertised_address=neo:7688

# Security Settings (unchanged)
dbms.security.auth_enabled=false
dbms.security.procedures.unrestricted=apoc.*
dbms.security.procedures.allowlist=apoc.*

# Write Operation Settings - Critical for your case
dbms.checkpoint.interval.time=5m                    # More frequent checkpoints
dbms.checkpoint.interval.tx=10000                   # Checkpoint after fewer transactions
dbms.tx_log.rotation.retention_policy=1 days        # Keep logs for recovery
dbms.tx_log.rotation.size=100M                     # Smaller log files - rotate more often

# Basic Performance Settings
dbms.jvm.additional=-XX:+UseG1GC
dbms.jvm.additional=-XX:+ExitOnOutOfMemoryError
dbms.threads.worker_count=4                        # Match your CPU cores
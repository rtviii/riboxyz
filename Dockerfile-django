# base image
FROM ubuntu:22.04



# Disable bytecode writing: Python
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# ----- SETUP -------------------
# vars inside the container
ENV RIBXZ_API=/home/ribxz_api
ENV RIBCTL=/home/ribctl
ENV PYMOL_SOURCE=/home/pymol
ENV RIBETL_DATA=/home/RIBETL_DATA



# set work directory
RUN mkdir -p $RIBXZ_API
RUN mkdir -p $RIBCTL
RUN mkdir -p $PYMOL_SOURCE
# RUN mkdir -p $RIBETL_DATA

# ----- LIBS -------------------------------------------
RUN apt-get update -y && apt-get -y install curl 
RUN apt-get install software-properties-common -y
RUN add-apt-repository --remove ppa:ondrej/php

RUN apt-get install git vim apt-transport-https python3 \
build-essential python3-dev python3-pip python3-venv \
libglew-dev libpng-dev libfreetype6-dev libxml2-dev \
libmsgpack-dev python3-pyqt5.qtopengl libglm-dev libnetcdf-dev \
apt-transport-https ca-certificates libssl-dev wget  -y 
# -------------------------------------------------------------

# ----- PYMOL_INSTALLATION -------------
RUN pip3 install virtualenv netCDF4

#  the following pathing is elaborated on here: https://sourceforge.net/p/pymol/mailman/message/35988916/
#  be mindful of the OS dependencies 
COPY pymol_source $PYMOL_SOURCE
ADD pymol_source $PYMOL_SOURCE
ENV PYMOL_PATH="${PYMOL_SOURCE}/__pymol_lib"
ENV PYTHONPATH="${PYMOL_PATH}/modules" 
RUN mkdir -p $PYMOL_PATH
WORKDIR $PYMOL_SOURCE
RUN python3 setup.py build install --home="${PYMOL_PATH}" --install-lib="${PYMOL_PATH}/modules/" --install-scripts="${PYMOL_PATH}"

# --- NEO4J --------------------------------------------------------------------------------
# RUN add-apt-repository -y ppa:openjdk-r/ppa
# RUN apt-get update

# RUN add-apt-repository -y universe

# RUN wget -O neo.gpg.key https://debian.neo4j.com/neotechnology.gpg.key && apt-key add --no-tty neo.gpg.key
# RUN echo 'deb https://debian.neo4j.com stable latest' | tee -a /etc/apt/sources.list.d/neo4j.list
# RUN apt-get update
# RUN mkdir /etc/ssl/certs/java/
# RUN apt install -y --reinstall -o Dpkg::Options::="--force-confask,confnew,confmiss" --reinstall ca-certificates-java ssl-cert openssl ca-certificates
# RUN apt-get install -y neo4j
# --- NEO4J ---------------------------------------------------------------------------------





# ------- WORKDIR $DJANGO ---------------
ADD ribxz_api/reqs.txt $RIBXZ_API
RUN python3 -m venv "/opt/venv"
ENV PATH="/opt/venv/bin:$PATH"
RUN pip3 install -r ${RIBXZ_API}/reqs.txt
RUN pip3 install pytz   --upgrade
RUN pip3 install tzdata --upgrade
RUN pip3 install gunicorn

# Django ports
EXPOSE 8000 8001 8002



# Be careful given that both the whole django project and the main module are called `rbxz_bend`. (hence not using the $DJANGO here)
COPY ribxz_api ${RIBXZ_API}

# Be careful given that both the whole django project and the main module are called `rbxz_bend`. (hence not using the $DJANGO here)
COPY ribctl ${RIBCTL}

RUN pip3 install -r ${RIBXZ_API}/reqs.txt

WORKDIR ${RIBXZ_API}
ENTRYPOINT ["gunicorn", "--bind", ":8000", "--workers", "20", "ribxz_api.wsgi:application","--reload", "--timeout", "500"]
